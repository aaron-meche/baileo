var t=Object.defineProperty,e=(e,r,i)=>(((e,r,i)=>{r in e?t(e,r,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[r]=i})(e,"symbol"!=typeof r?r+"":r,i),i),r=(t,e,r)=>{if(!e.has(t))throw TypeError("Cannot "+r)},i=(t,e,i)=>(r(t,e,"read from private field"),i?i.call(t):e.get(t));const { connect:s } = require('worktop/ws');const { reply:a } = require('worktop/response');var n,o=class{constructor(t,r){e(this,"DEBUG"),this.setup&&t.blockConcurrencyWhile((()=>this.setup(t,r))),this.DEBUG=!1}async connect(t){let e=s(t);if(e)return e;let{0:r,1:i}=new WebSocketPair;function a(){i.close()}return i.accept(),i.addEventListener("close",a),i.addEventListener("error",a),this.onconnect&&await this.onconnect(t,i),new Response(null,{status:101,statusText:"Switching Protocols",webSocket:r})}async fetch(t,e){try{let r=new Request(t,e);return await this.receive(r)}catch(t){let e=this.DEBUG&&t.stack;return new Response(e||"Error with receive",{status:400})}}},c=class{constructor(t){var i,s,a,o;e(this,"id"),((t,e,r)=>{if(e.has(t))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(t):e.set(t,r)})(this,n,void 0),this.id=t.id.toString(),i=this,s=n,a=t.storage,r(i,s,"write to private field"),o?o.call(i,a):s.set(i,a)}async fetch(t,e){try{let r=new Request(t,e),{pathname:s}=new URL(r.url);if("get"===s){let[t,e]=await r.json(),s=await i(this,n).get(t,e);if(s instanceof Map){let t=[...s];return a(200,{results:t})}return a(200,{result:s})}if("list"===s){let[t]=await r.json(),e=[...await i(this,n).list(t)];return a(200,{results:e})}if("put"===s){let[t,e,s]=await r.json(),o=t&&"object"==typeof t;o&&(s=e),s=s||{};let{overwrite:c=!0,...l}=s;if(!c){let e=o?Object.keys(t):t,r=await i(this,n).get(e);if(r instanceof Map&&r.size>0||null!=r){return a(409,{error:"cannot overwrite existing key"})}}return o?await i(this,n).put(t,l):await i(this,n).put(t,e,l),a(200,{result:!0})}if("delete"===s){let[t,e]=await r.json(),s=await i(this,n).delete(t,e);return a(200,{result:s})}return a(400)}catch(t){let e=String(t);return a(500,{error:e})}}};n=new WeakMap;exports.Actor=o;exports.DataGroup=c;