{"version":3,"file":"mdx-plugin.js","sourceRoot":"","sources":["../../plugins/mdx-plugin.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yCAAoC;AAGpC,kDAA0B;AAE1B,MAAM,cAAc,GAAG,CAAC,EAAU,EAAE,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AAE9F;;;;GAIG;AACH,SAAS,cAAc,CAAC,IAAY;IAClC,MAAM,eAAe,GAAG,IAAA,eAAK,EAC3B,IAAA,mBAAO,EACL,OAAO,CAAC,OAAO,CAAC,4BAA4B,EAAE;QAC5C,KAAK,EAAE,CAAC,IAAA,mBAAO,EAAC,OAAO,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC,CAAC;KACtE,CAAC,CACH,CACF,CAAC;IAEF,OAAO;2BACkB,eAAe;MACpC,IAAI;KACL,CAAC;AACN,CAAC;AAED;;;;;;;GAOG;AACH,SAAgB,SAAS,CAAC,OAAgB;IACxC,MAAM,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC;IAE7B,OAAO;QACL,IAAI,EAAE,2BAA2B;QACjC,OAAO,EAAE,KAAK;QACd,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE;YACrB,IAAI,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;gBACvB,aAAa;gBACb,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW;oBACvC,CAAC,CAAC,wDAAa,qBAAqB,GAAC;oBACrC,CAAC,CAAC,wDAAa,qBAAqB,GAAC,CAAC;gBAExC,4EAA4E;gBAC5E,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,OAAO,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAE7E,MAAM,IAAI,GAAG,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;gBAEvE,OAAO;oBACL,IAAI;oBACJ,GAAG,EAAE,IAAI;iBACV,CAAC;aACH;QACH,CAAC;KACF,CAAC;AACJ,CAAC;AAzBD,8BAyBC","sourcesContent":["import { dirname } from 'node:path';\nimport type { Options } from '@storybook/core-common';\nimport { Plugin } from 'vite';\nimport slash from 'slash';\n\nconst isStorybookMdx = (id: string) => id.endsWith('stories.mdx') || id.endsWith('story.mdx');\n\n/**\n * Grab the mdx compiler from the @mdx-js/react that comes with @storybook/mdx1-csf,\n * and add it to the top of the code.\n * Equivilent to https://github.com/storybookjs/mdx1-csf/blob/d58cb032a8902b3f24ad487b6a7aae11ba8b33f6/loader.js#L12-L16\n */\nfunction injectRenderer(code: string) {\n  const mdxReactPackage = slash(\n    dirname(\n      require.resolve('@mdx-js/react/package.json', {\n        paths: [dirname(require.resolve('@storybook/mdx1-csf/package.json'))],\n      })\n    )\n  );\n\n  return `\n    import { mdx } from '${mdxReactPackage}';\n    ${code}\n    `;\n}\n\n/**\n * Storybook uses two different loaders when dealing with MDX:\n *\n * - *stories.mdx and *story.mdx are compiled with the CSF compiler\n * - *.mdx are compiled with the MDX compiler directly\n *\n * @see https://github.com/storybookjs/storybook/blob/next/addons/docs/docs/recipes.md#csf-stories-with-arbitrary-mdx\n */\nexport function mdxPlugin(options: Options): Plugin {\n  const { features } = options;\n\n  return {\n    name: 'storybook-vite-mdx-plugin',\n    enforce: 'pre',\n    async transform(src, id) {\n      if (id.match(/\\.mdx?$/)) {\n        // @ts-ignore\n        const { compile } = features?.previewMdx2\n          ? await import('@storybook/mdx2-csf')\n          : await import('@storybook/mdx1-csf');\n\n        // TODO: we don't currently support setting mdx options.  Storybook 7.0 does\n        const mdxCode = String(await compile(src, { skipCsf: !isStorybookMdx(id) }));\n\n        const code = features?.previewMdx2 ? mdxCode : injectRenderer(mdxCode);\n\n        return {\n          code,\n          map: null,\n        };\n      }\n    },\n  };\n}\n"]}